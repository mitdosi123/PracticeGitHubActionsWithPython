# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export PYTHONPATH=src
        pytest
    #- name: Push docker image to dockerhub
    #  uses: mr-smithers-excellent/docker-build-push@v4
    #  with:
    #      image: mitdosi8919/practicedocker 
    #      username: ${{ secrets.DOCKER_USERNAME }}
    #      password: ${{ secrets.DOCKER_PASSWORD }}
    #      context: .
    #      file: ./Dockerfile
    #- name: Publish to Registry
    #  uses: elgohr/Publish-Docker-Github-Action@master
    #  with:
    #    name: mitdosi8919/practicedocker
    #    username: ${{ secrets.DOCKER_USERNAME }}
    #    password: ${{ secrets.DOCKER_PASSWORD }}
    #    context: .
    #    file: ./Dockerfile
    #    push: true
#     -
#       name: Set up QEMU
#       uses: docker/setup-qemu-action@v1
#     -
#       name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1
#     -
#       name: Login to DockerHub
#       uses: docker/login-action@v1 
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}
#     -
#       name: Build and push
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         file: ./Dockerfile
#         platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
#         push: true
#         tags: |
#           user/app:latest
#           user/app:1.0.0
#
    -
      name: Build and push 
      uses: docker/build-push-action@v1
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: mitdosi8919/practicedocker
          tag_with_ref: true
          tag-_with_sha: true
          add_git_labels: true
          always_pull: true
    
  deploy_to_azure:
      name: deploy to azure
      runs-on: ubuntu-latest
      needs: build
      steps:
        - uses: azure/actions/login@master
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        #- uses: azure/appservice-actions/webapp-container@master
        #  with:
        #    app-name: "demo"
        #    images: 'https://hub.docker.com/repository/docker/mitdosi8919/practicedocker:main'     
        -
          name: Login to DockerHub
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Run docker commands
          run: |
            sudo docker pull mitdosi8919/practicedocker:main
            sudo docker run -dit -p 80:3010 mitdosi8919/practicedocker:main
            
